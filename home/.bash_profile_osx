# ~/.bash_profile_osx
#
# Author Augusto Pascutti <augusto.hp@gmail.com>
# Part of http://github.com/augustohp/warwick
# vim: ft=sh noet sw=4 ts=4:

# shellcheck disable=SC1090,SC1091,SC2124

echo "  Loading ~/.bash_profile_osx ...";
export BASH_SILENCE_DEPRECATION_WARNING=1

warwick_verbose_inside "Locale..."
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# -----------------------------------------------------------------------------
#                                                                      Homebrew
# https://brew.sh/

warwick_verbose_inside "Homebrew installed?"
HOMEBREW_NO_INSTALL_CLEANUP=1
HOMEBREW_NO_ENV_HINTS=1
HOMEBREW_CHECK_CACHEDIR="${HOME}/.homebrew-check"

export HOMEBREW_NO_INSTALL_CLEANUP HOMEBREW_NO_ENV_HINTS

if [ -z "$(which brew)" ]
then
	echo "Installing homebrew ..."
	/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	echo "Installing base packages using brew ..."
	brew update --quiet
	brew install ag awscli bash bash-completion fzf gawk git gnu-sed gpg python3 terraform tree vim zoxide
fi

# [homebrew][] bash-completion support
if [ "$TERM_PROGRAM" != "vscode" ]
then
	# Avoid loading inside vscode, making it very slow and breaking agentic AI usage
	warwick_verbose_inside "Bash completion ..."
	old_bash_completion_script="$BREW_PREFIX/etc/bash_completion"
	new_bash_completion_script="$BREW_PREFIX/etc/profile.d/bash_completion.sh"
	if [ -f "$new_bash_completion_script" ]
	then
		source "$new_bash_completion_script"
	elif [ -f "$old_bash_completion_script" ]
	then
		source "$old_bash_completion_script"
	fi
fi

# Prefer brew binaries
export PATH="/usr/local/sbin:/usr/local/bin:$PATH"

brew_missing()
{
	local dep="$1"

	if [ ! -d "$HOMEBREW_CHECK_CACHEDIR" ]
	then
		mkdir "$HOMEBREW_CHECK_CACHEDIR"
	fi

	# If the dep file exists, it is already installed
	if [ -f "$HOMEBREW_CHECK_CACHEDIR/$dep" ]
	then
		return 1
	fi

	if brew list "$dep" 2> /dev/null
	then
		# Caches check so this doesn't take forever
		touch "${HOMEBREW_CHECK_CACHEDIR}/$dep"
		return 1
	fi

	return 0
}

# Will install formula using brew, if not already installed
# Usage: brew_dependency gawk gsed
brew_dependency()
{
	local dependecies="$@"

	for dep in $dependecies
	do
		if brew_missing "$dep"
		then
			echo "    Installing $dep..."
			brew install --quiet "$dep"
		fi
	done
}

# -----------------------------------------------------------------------------
#                                                                      Hide BSD

warwick_verbose_inside "Favor GNU instead of BSD ..."
brew_dependency gawk gsed grep

PATH="/usr/local/opt/libtool/libexec/gnubin:$PATH"
export PATH

# More sane "defaults" (Gnu) for Linux users, like me
alias awk=gawk
alias sed=gsed
alias grep=ggrep
alias ls="ls -G"

# -----------------------------------------------------------------------------
#                                                                        Python
# https://docs.brew.sh/Homebrew-and-Python

warwick_verbose_inside "Python ..."

BREW_PYTHON_PATH="$(brew --prefix python)/libexec/bin"
PATH="$BREW_PYTHON_PATH:$PATH"

export PATH

uv_source="$HOME/.local/bin/env"
if [ -f "$uv_source" ]
then
	source "${uv_source}"
fi

# -----------------------------------------------------------------------------
#                                                                       PHPBrew
# https://github.com/phpbrew/phpbrew

if [ -n "$(command -v phpbrew)" ]
then
	# Makes phpbrew reconize homebrew
	PHPBREW_LOOKUP_PREFIX="$(brew --prefix)"
	export PHPBREW_LOOKUP_PREFIX
fi

# -----------------------------------------------------------------------------
#                                                                  Google Cloud
warwick_verbose_inside "GCP ..."

brew_dependency python3 google-cloud-sdk

source "$(brew --prefix)/share/google-cloud-sdk/path.bash.inc"
CLOUDSDK_PYTHON="$BREW_PYTHON_PATH/python"
export CLOUDSDK_PYTHON

if ! gke-gcloud-auth-plugin --version &>/dev/null
then
	echo "    Installing gke-gcloud-auth-plugin..."
	gcloud components install gke-gcloud-auth-plugin
fi

# -----------------------------------------------------------------------------
#                                                                         Casks

warwick_verbose_inside "Casks ..."
casks="docker visual-studio-code vivaldi 1password"
casks=""
for cask in $casks
do
	if brew_missing $cask
	then
		brew install --cask $cask
	fi
done

# -----------------------------------------------------------------------------
#                                                                           k8s

warwick_verbose_inside "k8s ..."
brew_dependency kubectx

if brew_missing kubetail
then
	brew tap johanhaleby/kubetail
	brew install kubetail
fi

